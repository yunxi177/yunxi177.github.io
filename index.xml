<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>一二三四吾</title>
    <link>http://www.artacode.com/</link>
    <description>Recent content on 一二三四吾</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.artacode.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>第一篇博客</title>
      <link>http://www.artacode.com/posts/firstpost/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.artacode.com/posts/firstpost/</guid>
      <description>it‘s my life 最喜欢的句子  世界上只有一种英雄主义，就是在认清了生活的本质之后依然热爱生活
 最喜欢的乐队 最信奉的信条 大道至简 &amp;#160; &amp;#160; &amp;#160; &amp;#160;世上至所有有专业和非专业的划分就是因为这世界太复杂需要专业的人帮我们去把复杂的事情简单化，从而促使我们生活的便利。
&amp;#160; &amp;#160; &amp;#160; &amp;#160;将复杂的东西简单话，应该是每个专业的人应该不遗余力要做的事情，而不是去故作高深，弄出一堆复杂的东西去呈现他人。生活中也总少不了有人把简单的事情复杂化，或把复杂的东西搞的更复杂。普通人把这样的人当高人，专业的人不解为何舍近求远。</description>
    </item>
    
    <item>
      <title>xorm将表生成实体</title>
      <link>http://www.artacode.com/posts/golang/xorm-reverse/</link>
      <pubDate>Sun, 16 Sep 2018 17:24:20 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/golang/xorm-reverse/</guid>
      <description>xorm 工具 xorm 是一组数据库操作命令行工具。
源码安装 go get github.com/go-xorm/cmd/xorm
使用 使用帮助 查看帮助命令： xorm help reverse 帮助详情
usage: xorm reverse [-s] driverName datasourceName tmplPath [generatedPath] [tableFilterReg] according database&#39;s tables and columns to generate codes for Go, C++ and etc. -s Generated one go file for every table driverName Database driver name, now supported four: mysql mymysql sqlite3 postgres datasourceName Database connection uri, for detail infomation please visit driver&#39;s project page tmplPath Template dir for generated.</description>
    </item>
    
    <item>
      <title>docker mysql启动报错</title>
      <link>http://www.artacode.com/posts/docker/mysql/</link>
      <pubDate>Sat, 15 Sep 2018 16:22:17 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker/mysql/</guid>
      <description>错误信息 2018-09-15T08:11:26.620005077Z 2018-09-15T08:11:26.619857Z 0 [ERROR] [FATAL] InnoDB: Table flags are 0 in the data dictionary but the flags in file ./ibdata1 are 0x4800! 2018-09-15T08:11:26.620023933Z 2018-09-15 08:11:26 0x7f7203c4b740 InnoDB: Assertion failure in thread 140127666222912 in file ut0ut.cc line 942  解决方法 原因是宿主机data目录不为空照成; 删除默认data目录：/var/lib/mysql</description>
    </item>
    
    <item>
      <title>nodejs常见问题</title>
      <link>http://www.artacode.com/posts/nodejs/faq/</link>
      <pubDate>Sat, 15 Sep 2018 12:44:30 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/nodejs/faq/</guid>
      <description>错误1 npm ERR! Linux 4.15.0-34-generic npm ERR! argv &amp;quot;/usr/bin/node&amp;quot; &amp;quot;/usr/bin/npm&amp;quot; &amp;quot;install&amp;quot; &amp;quot;--no-bin-links&amp;quot; npm ERR! node v8.10.0 npm ERR! npm v3.5.2 npm ERR! code EMISSINGARG npm ERR! typeerror Error: Missing required argument #1 npm ERR! typeerror at andLogAndFinish (/usr/share/npm/lib/fetch-package-metadata.js:31:3) npm ERR! typeerror at fetchPackageMetadata (/usr/share/npm/lib/fetch-package-metadata.js:51:22) npm ERR! typeerror at resolveWithNewModule (/usr/share/npm/lib/install/deps.js:456:12) npm ERR! typeerror at /usr/share/npm/lib/install/deps.js:457:7 npm ERR! typeerror at /usr/share/npm/node_modules/iferr/index.js:13:50 npm ERR! typeerror at /usr/share/npm/lib/fetch-package-metadata.js:37:12 npm ERR! typeerror at addRequestedAndFinish (/usr/share/npm/lib/fetch-package-metadata.</description>
    </item>
    
    <item>
      <title>docker常用命令</title>
      <link>http://www.artacode.com/posts/docker/command/</link>
      <pubDate>Sat, 15 Sep 2018 09:06:07 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker/command/</guid>
      <description>docker 查看日志 sudo docker logs -f -t --tail 20 mysql
docker拷贝内容到宿主机 docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH 例如：docker cp 容器名:容器路径 宿主机路径</description>
    </item>
    
    <item>
      <title>docker常见问题</title>
      <link>http://www.artacode.com/posts/docker-error/</link>
      <pubDate>Sun, 09 Sep 2018 15:54:18 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker-error/</guid>
      <description>docker pull 失败 错误信息 Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io: no such host
解决方法 将dns修改成8.8.8.8就可以解决此问题</description>
    </item>
    
    <item>
      <title>Supervisor 安装与使用</title>
      <link>http://www.artacode.com/posts/supervisor/</link>
      <pubDate>Tue, 04 Sep 2018 11:22:14 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/supervisor/</guid>
      <description>简介 supervisor管理进程，是通过fork/exec的方式将这些被管理的进程当作supervisor的子进程来启动，所以我们只需要将要管理进程的可执行文件的路径添加到supervisor的配置文件中就好了。此时被管理进程被视为supervisor的子进程，若该子进程异常中断，则父进程可以准确的获取子进程异常中断的信息，通过在配置文件中设置autostart=ture，可以实现对异常中断的子进程的自动重启。
安装 sudo apt-get install supervisor
配置  进入配置文件目录 : cd /etc/supervisor/conf.d 新建配置文件 sudo vim test.conf  配置内如如下：
[program:cow] command=/home/argericy/workspace/test #要执行的命令 autostart=true #自动启动 autorestart=true #自动重启 user=root #执行命令用户 log_stderr=true logfile=/var/log/test.log #日志文件 stopsignal=INT [supervisord]  常见问题 supervisor Error: .ini file does not include supervisord section 在配置文件中增加 [supervisord] 配置项</description>
    </item>
    
    <item>
      <title>freeRADIUS搭建</title>
      <link>http://www.artacode.com/posts/freeradius/</link>
      <pubDate>Sun, 19 Aug 2018 11:05:29 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/freeradius/</guid>
      <description>系统要求 操作系统 CentOS 7.0 x86_64 网址：http://www.centos.org/
所需软件  FreeRADIUS 3.0 网址：http://freeradius.org/ 目前最新版本为3.0.6 MariaDB 网址：https://mariadb.com/ 目前最新版本为10.3.9 注：MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。MariaDB虽然被视为MySQL数据库的替代品，但它在扩展功能、存储引擎以及一些新的功能改进方面都强过MySQL。  注意事项 本文提到的所有操作，需要以root身份执行。
FreeRADIUS 3.0的安装 根据官网上的说明，建议采用二进制安装包的形式安装，而不推荐从源代码编译的方式。因此，本次采用二进制安装包的形式安装。.
安装FreeRADIUS 3.0 服务器程序  以root身份登录到终端，执行以下命令：yum install freeradius 输入“y”，继续安装。 安装完毕。  安装FreeRADIUS工具包（freeradius-utils） 这个工具包是用于测试freeradius的，后面会用到。安装方法同前，执行一下命令： yum install freeradius-utils
FreeRADIUS 3.0的测试 修改用户管理配置文件 该文件是/etc/raddb/users，使用vi工具打开，命令如下: sudo vim /etc/raddb/users 打开文件后，查找 steve Cleartext-Password :=&amp;quot;testing&amp;quot; （76-84行）, 取消该段内容的注释。
修改防火墙配置 修改防火墙配置，允许freeradius所使用的端口1812，1813通过。命令如下：
iptables -A INPUT -p udp --dport 1812 -j ACCEPT iptables -A INPUT -p udp --dport 1813 -j ACCEPT  以调试方式启动freeradius 执行以下命令：radiusd –X</description>
    </item>
    
    <item>
      <title>hugo安装及部署</title>
      <link>http://www.artacode.com/posts/hugoinstall/</link>
      <pubDate>Mon, 06 Aug 2018 19:27:54 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/hugoinstall/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;Hugo是一个用Go编写的快速而现代的静态站点生成器，旨在使网站创建再次变得有趣。&lt;br /&gt;
Hugo的优势就在于其生成的站点是静态的，因此网站的访问速度是非常快的，其次使用Hugo，可以让你专注于写文章，至于主题和seo Hugo已经很好的解决了这些问题。下面就来讲一下如何用Hugo生成一个站点并用github page部署
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swoft单元测试</title>
      <link>http://www.artacode.com/posts/swoftunit/</link>
      <pubDate>Sun, 05 Aug 2018 11:08:39 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/swoftunit/</guid>
      <description>&lt;h2 id=&#34;1-1-为什么要使用单元测试&#34;&gt;1.1 为什么要使用单元测试&lt;/h2&gt;

&lt;p&gt;在编写代码的过程中，一定会反复调试保证它能够编译通过。但代码通过编译，只是说明了它的语法正确。无法保证它的语义也一定正确，没有任何人可以轻易承诺这段代码的行为一定是正确的。幸运的是，单元测试会为我们的承诺做保证。编写单元测试就是用来验证这段代码的行为是否与我们期望的一致。有了单元测试，我们可以自信地交付自己的代码，减少后顾之忧。
   &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信分享</title>
      <link>http://www.artacode.com/posts/wxshare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.artacode.com/posts/wxshare/</guid>
      <description>&lt;h3 id=&#34;微信分享步骤&#34;&gt;微信分享步骤&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;引入jｓ&lt;/li&gt;
&lt;li&gt;设置白名单&lt;/li&gt;
&lt;li&gt;引入sdk&lt;/li&gt;

&lt;li&gt;&lt;p&gt;实现分享功能
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>